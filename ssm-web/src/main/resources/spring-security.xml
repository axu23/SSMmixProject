<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    <!--
       配置具体的规则
       auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面
       use-expressions="false"	是否使用SPEL表达式（没学习过）
   -->
    <security:http auto-config="true" use-expressions="false">
        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
        <security:intercept-url pattern="/index.jsp" access="ROLE_product,ROLE_order,ROLE_admin"/>
        <security:intercept-url pattern="/product/**" access="ROLE_product,ROLE_admin"/>
        <security:intercept-url pattern="/orders/**" access="ROLE_order,ROLE_admin"/>
        <security:intercept-url pattern="/pages/*.jsp" access="IS_AUTHENTICATED_FULLY"/>
        <security:intercept-url pattern="/**" access="ROLE_admin,ROLE_order,ROLE_product"/>
        <!-- 定义跳转的具体的页面 -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login.do"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
        />
        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>
    </security:http>

    <!--配置数据库中用户名和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启JSR250Z注解使用-->
  <!--  <security:global-method-security jsr250-annotations="enabled"></security:global-method-security>-->

    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>


</beans>